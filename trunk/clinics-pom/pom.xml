<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.clinics</groupId>
	<artifactId>clinics-pom</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>3.8.1</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!--
					Forces to use 2.2-beta-1 plugin version because default version
					2.2-beta-2 for maven 2.0.9 have bug with overwriting files with
					same names in binary assembles. See JIRA here:
					http://jira.codehaus.org/browse/MASSEMBLY-314 and
					http://jira.codehaus.org/browse/MASSEMBLY-285 Changed to
					2.2-beta-3, as the above bugs are fixed there
				-->
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2-beta-3</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<verbose>true</verbose>
						<executable>${JAVA_HOME}/bin/javac</executable>
						<compilerVersion>1.5</compilerVersion>
					</configuration>
				</plugin>
				<plugin>
					<!-- we want to pack and ship the source code, too -->
					<artifactId>maven-source-plugin</artifactId>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<modules>
		<module>../clinics-core-server</module>
		<module>../clinics-gwt-client</module>
	</modules>

</project>
